{
  "hash": "a99ba00bf0d8a4f693a6ea846633a89e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Logistic Regression\nsubtitle: Classification\ndate: today\ndate-format: long\nfooter: \"[IAFF 6501 Website](https://quant4ia.rocks/)\"\nlogo: images/iaff6501-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    #multiplex: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n::: {.cell}\n\n:::\n\n\n# Binary Outcomes\n\n## Link to Code\n\n<br>\n\nPlease find the code [here](https://www.dropbox.com/scl/fo/g4tdpdwcij78nyydvr4bp/h?rlkey=hctskhle6222csnwre5ir9gz3&dl=0)\n\n## Binary Outcomes\n\n<br>\n\n- So far we have looked at continuous or numerical outcomes (response variables)\n- We are often also interested in outcome variables that are binary (Yes/No, or 1/0)\n    - Did violence happen, or not?\n    - Classification: is this email spam?\n\n## Example: Conflict Onset\n\n<br>\n\n::: {.incremental}\n- Did a civil war begin in a given country in a given year? (yes/no)\n- Predictors: wealth, democracy, terrain, ethnic diversity, etc. \n- Seminal work by Fearon and Laitin (2003) \n- We can use logistic regression to model this binary outcome\n:::\n\n## Modeling\n\n<br>\n\n::: {.incremental}\n- We can treat each outcome (conflict onset) as successes and failures arising from separate Bernoulli trials\n- **Bernoulli trial**: a random experiment with exactly two possible outcomes, \"success\" and \"failure\", in which the probability of success is the same every time the experiment is conducted\n- Success is usually coded as 1, failure as 0\n- So ironically, conflict onset is a \"success\" in this context\n:::\n\n## Modeling\n\n<br>\n\nEach Bernoulli trial can have a separate probability of success\n\n<br>\n\n$$ y_i ∼ Bern(p) $$\n\n## Modeling\n\n<br>\n\n- We can then use the predictor variables to model that probability of success, $p_i$\n- We can't really use a linear model for $p_i$ (since $p_i$ must be between 0 and 1) but we can transform the linear model to have the appropriate range\n\n\n## Generalized Linear Models\n\n<br>\n\n- This is a very general way of addressing many problems in regression and the resulting models are called **generalized linear models (GLMs)**\n- Logistic regression is a very common example\n\n## GLMs\n\n<br>\n\nAll GLMs have the following three characteristics:\n\n::: {.incremental}\n- A probability distribution describing a generative model for the outcome variable\n- A linear model:\n$$\\eta = \\beta_0 + \\beta_1 X_1 + \\cdots + \\beta_k X_k$$\n- A link function that relates the linear model to the parameter of the outcome distribution\n:::\n  \n## Logistic Regression\n\n<br>\n\n- Logistic regression is a GLM used to model a binary categorical outcome (0 or 1)\n- In logistic regression, the link function that connects $\\eta_i$ to $p_i$ is the **logit function**\n- **Logit function:** For $0\\le p \\le 1$\n\n$$logit(p) = \\log\\left(\\frac{p}{1-p}\\right)$$\n\n## Logit Function\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-11.1_files/figure-revealjs/logit_function-1.png){width=960}\n:::\n:::\n\n\n\n## Logistic Regression Model\n\n<br>\n\n::: {.incremental}\n- $y_i \\sim \\text{Bern}(p_i)$\n- $\\eta_i = \\beta_0+ \\beta_1 x_{1,i} + \\cdots + \\beta_n x_{n,i}$\n- $\\text{logit}(p_i) = \\eta_i$\n:::\n\n## Logistic Regression Model\n\n<br>\n\n- $\\text{logit}(p_i) = \\eta_i = \\beta_0+ \\beta_1 x_{1,i} + \\cdots + \\beta_n x_{n,i}$\n- Now take inverse logit to get $p$\n\n$$p_i = \\frac{\\exp(\\beta_0+\\beta_1 x_{1,i} + \\cdots + \\beta_k x_{k,i})}{1+\\exp(\\beta_0+\\beta_1 x_{1,i} + \\cdots + \\beta_k x_{k,i})}$$\n\n# Analyzing Conflict Onset\n\n## The `peacesciencer` Package\n\n- The `peacesciencer` package provides a number of datasets and functions for analyzing conflict and peace\n- Provides data from a number of important datasets in the field of conflict studies, e.g.\n  - Correlates of War (CoW) project\n  - Uppsala Conflict Data Program (UCDP)\n  - Militarized Interstate Dispute (MID) dataset\n- Provides functions for analyzing conflict and adding control variables to the dataset\n\n## Using the `peacesciencer` Package\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(peacesciencer)\nlibrary(tidymodels)\n\nconflict_df <- create_stateyears(system = 'gw') |>\n  filter(year %in% c(1946:1999)) |>\n  add_ucdp_acd(type=c(\"intrastate\"), only_wars = FALSE) |>\n  add_democracy() |>\n  add_creg_fractionalization() |>\n  add_sdp_gdp() |>\n  add_rugged_terrain()\n\nglimpse(conflict_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,036\nColumns: 20\n$ gwcode         <dbl> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2…\n$ statename      <chr> \"United States of America\", \"United States of America\",…\n$ year           <dbl> 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1…\n$ ucdpongoing    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ ucdponset      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ maxintensity   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ conflict_ids   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ v2x_polyarchy  <dbl> 0.605, 0.587, 0.599, 0.599, 0.587, 0.602, 0.601, 0.594,…\n$ polity2        <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ xm_qudsest     <dbl> 1.259180, 1.259180, 1.252190, 1.252190, 1.270106, 1.259…\n$ ethfrac        <dbl> 0.2226323, 0.2248701, 0.2271561, 0.2294918, 0.2318781, …\n$ ethpol         <dbl> 0.4152487, 0.4186156, 0.4220368, 0.4255134, 0.4290458, …\n$ relfrac        <dbl> 0.4980802, 0.5009111, 0.5037278, 0.5065309, 0.5093204, …\n$ relpol         <dbl> 0.7769888, 0.7770017, 0.7770303, 0.7770729, 0.7771274, …\n$ wbgdp2011est   <dbl> 28.539, 28.519, 28.545, 28.534, 28.572, 28.635, 28.669,…\n$ wbpopest       <dbl> 18.744, 18.756, 18.781, 18.804, 18.821, 18.832, 18.848,…\n$ sdpest         <dbl> 28.478, 28.456, 28.483, 28.469, 28.510, 28.576, 28.611,…\n$ wbgdppc2011est <dbl> 9.794, 9.762, 9.764, 9.730, 9.752, 9.803, 9.821, 9.857,…\n$ rugged         <dbl> 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073,…\n$ newlmtnest     <dbl> 3.214868, 3.214868, 3.214868, 3.214868, 3.214868, 3.214…\n```\n\n\n:::\n:::\n\n\n## Running a Logistic Regression\n\n<br>\n\n- Implementation is not very different from a linear model\n- We just need to update our code to run a GLM\n    - specify the model with `logistic_reg()`\n    - use `\"glm\"` instead of `\"lm\"` as the engine     \n    - define `family = \"binomial\"` for the link function to be used in the model\n\n## Bivariate Logistic Regression\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconflict_model <- logistic_reg() |>\n  set_engine(\"glm\") |>\n  fit(factor(ucdponset) ~ wbgdppc2011est,\n                  data= conflict_df,\n                  family = \"binomial\")\n\ntidy(conflict_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  term           estimate std.error statistic  p.value\n  <chr>             <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)      -1.16     0.426      -2.73 6.37e- 3\n2 wbgdppc2011est   -0.331    0.0526     -6.29 3.20e-10\n```\n\n\n:::\n:::\n\n\n## Interpreting the Results\n\n<br>\n\n\n$$\\log\\left(\\frac{p}{1-p}\\right) = -1.16-0.33\\times \\text{logGDPpc}$$\n\n## Interpreting the Results\n\n<br> \n\n- For a quick interpretation of the coefficients, we can exponentiate them\n- The exponentiated coefficient is the odds ratio\n- For each one-unit increase in the independent variable, the odds of the outcome occurring increase (or decrease) by a factor of the exponentiated coefficient\n\n## Interpreting the Results {.smaller}\n\n<br>\n\n$$\\log\\left(\\frac{p}{1-p}\\right) = -1.16-0.33\\times \\text{logGDPpc}$$\n\n<br>\n\nFor each one unit increase in log GDP per capita, the odds of the outcome occurring are multiplied by approximately 0.718, assuming other variables in the model are held constant. \n\n<br>\n\nThis means that an increase in GDP per capita is associated with a **decrease** in the odds of the outcome occurring. The odds of the outcome decrease by about 28.2% for each unit increase in GDP per capita (on average).\n\n## Your Turn! {.smaller}\n\n<br>\n\n- Run a bivariate logistic regression using ucdp onset as the outcome variable\n- First replicate the results using GDP per capita as the predictor\n- Now try a different predictor\n- Interpret the results\n  - What is the average effect of the predictor on conflict onset? \n  - How do you interpret that effect in terms of the odds of conflict onset?\n  \n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer1\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:5%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Calculating Predicted Probabilities {.scrollable}\n\n<br>\n\nProbability of conflict onset for a country with a log per capita GDP of 9 (about $8,000):\n\n$$\\log\\left(\\frac{p}{1-p}\\right) = -1.16-0.33\\times 9$$\n$$\\log\\left(\\frac{p}{1-p}\\right) = -4.13$$\n\n$$\\frac{p}{1-p} = \\exp(-4.13)$$\n\n$$\\frac{p}{1-p} = 0.016$$\n\n$$p = 0.016 \\times (1 - p)$$\n$$p = 0.016 - 0.016p$$ \n\n$$1.016p = 0.016$$\n$$p = 0.016 / 1.016$$\n$$p = 0.0158$$\n\n## Using `marginaleffects` \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the marginaleffects library\nlibrary(marginaleffects)\n\n# select some countries for a given year\nselected_countries <- conflict_df |>\n  filter(\n    statename %in% c(\"United States of America\", \"Venezuela\", \"Rwanda\"),\n    year == 1999)\n\n# extract the model\nconflict_fit <- conflict_model$fit\n\n# calculate margins for the subset\nmarg_effects <- predictions(conflict_fit, newdata = selected_countries)\n\n# tidy the results\ntidy(marg_effects) |>\n  select(estimate, p.value, conf.low, conf.high, statename)\n```\n:::\n\n\n## Using `marginaleffects`\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  estimate   p.value conf.low conf.high statename               \n     <dbl>     <dbl>    <dbl>     <dbl> <chr>                   \n1  0.00853 4.20e-161  0.00606    0.0120 United States of America\n2  0.0141  0          0.0113     0.0175 Venezuela               \n3  0.0311  1.36e-250  0.0256     0.0377 Rwanda                  \n```\n\n\n:::\n:::\n\n\n\n## Your Turn!\n\n<br>\n\n- Select your favorite three countries and a recent year\n- Calculate the predicted proability of conflict onset for that year using the marginal effects package\n- If you have time, try to do the calcualation by hand as well\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "week-11.1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}